---
- hosts: webserver
  become: true
  vars_files:
    - vars/main.yml
  tasks:
    ## Install GIT and gain access to private github repository

    - name: Install Git
      apt: name=git state=present update_cache=yes

    - name: Check if SSH key is already present
      stat:
        path: "{{ KEY_PATH }}"
      register: key_stat_result

    - name: Generate SSH key for accessing GitHub
      command: "ssh-keygen -t rsa -f {{ KEY_PATH }} -N ''"
      when: not key_stat_result.stat.exists

    - name: Get key content
      command: "cat {{ KEY_PATH }}.pub"
      register: key_content

    - name: Check if known_host exists
      stat:
        path: "{{ KNOWN_HOSTS_PATH }}"
      register: known_hosts_stat

    - name: Create known_hosts if it doesn't exist
      file:
        path: "{{ KNOWN_HOSTS_PATH }}"
        state: touch
      when: not known_hosts_stat.stat.exists

    - name: Get the content of known hosts
      shell: "cat {{ KNOWN_HOSTS_PATH }} | grep github.com"
      register: host_stat
      failed_when: host_stat.rc > 1

    - name: Add SSH public key to GitHub account
      uri:
        url: https://api.github.com/user/keys
        validate_certs: no
        method: POST
        body:
          title: "{{ KEY_TITLE }}"
          key: "{{ key_content.stdout }}"
        body_format: json
        headers:
          Content-Type: "application/json"
          Authorization: "token {{ GITHUB_ACCESS_TOKEN }}"
      register: task_log
      failed_when: task_log.content.find('key is already in use') == 0
    #

    - name: Check if repository already exists, if so delete it
      file:
        path: /var/www/website
        state: absent

    - name: Clone the repository
      shell: GIT_SSH_COMMAND="ssh -i {{ KEY_PATH }} -v -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null" {{ GIT_EXECUTABLE }} clone {{ GIT_REPO }} {{ CLONE_DEST }}

    #----------------------------------------------------
    # Install Node.JS, NPM and install website dependencies

    - name: Install the gpg key for nodejs LTS
      apt_key:
        url: "https://deb.nodesource.com/gpgkey/nodesource.gpg.key"
        state: present

    - name: Install the nodejs LTS repos
      apt_repository:
        repo: "deb https://deb.nodesource.com/node_14.x xenial main"
        state: present
        update_cache: yes

    - name: Install the nodejs
      apt:
        name: nodejs
        state: present

    - name: Install website dependencies
      shell: cd {{ CLONE_DEST }} && npm install


    #----------------------------------------------------
    # Install PM2 and run website on it

    - name: Install PM2
      shell: npm install pm2 -g

    - name: Run website
      shell: pm2 -f start {{ CLONE_DEST }}/index.js

    #----------------------------------------------------
    # Install and cofigure Nginx

    - name: Install Nginx
      apt: pkg=nginx state=installed update_cache=true
    - name: Start nginx
      service: name=nginx state=started

    - name: delete default nginx site
      file:
        path: /etc/nginx/sites-enabled/default
        state: absent
      notify: restart nginx

    - name: copy the nginx config file
      copy:
        src: ./templates/website.cfg
        dest: /etc/nginx/sites-available/website.cfg

    - name: create symlink
      file:
        src: /etc/nginx/sites-available/website.cfg
        dest: /etc/nginx/sites-enabled/website
        state: link

  handlers:
    - name: restart nginx
      service:
        name: nginx
        state: restarted

